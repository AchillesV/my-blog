import * as constants from './actionTypes';


const defaultState = {
  homeData: [
    {
      id: '1',
      title: '今岁应开墨色花!',
      time: '2019/8/22',
      category: '情感',
      content: '对方把你作为她整个的世界固然很危险，但也很宝贵！你既已发觉，一定会慢慢点醒她：最好旁敲侧击而勿正面提出，还要使她感到那是为了维护她的人格独立，扩大她的世界观。倘若你已经想到奥里维的故事，不妨就把那部书叫她细读一二遍，特别要她注意那一段插曲。像雅葛丽纳那样只知道love," "love," love的人只是童话中任务，在现实世界非但得不到love，连日子都会过不下去，因为她除了love一无所知，一无所有，一无所爱。这样狭窄 的天地哪像一个天地！这样片面的人生观哪会得到幸福！无论男女，只有把兴趣集中在事业 上，学问上，艺术上，尽量抛开渺小的自我，才有快活的可能，才觉得活得有意义。未经世事的少女往往会存一个荒诞的梦想，以为恋爱时期的感情的高潮也能在婚后维持 下去。这是违反自然规律的妄想。古语说，“君子之交谈如水”；又有一句话说，“夫妇相 敬如宾”。可见只有平静、含蓄、温和的感情方能持久，另外一句的意义是说，夫妇到后来 完全是一种知己朋友的关系，也即是我们所谓的终身伴侣。未婚之前双方能深切领会到这一 点。就为将来打定了最可靠的基础，免除了多少不必要的误会和痛苦。'
    },
    {
      id: '2',
      title: '今岁应开墨色花?',
      time: '2019/8/22',
      category: '情感',
      content: '对方把你作为她整个的世界固然很危险，但也很宝贵！你既已发觉，一定会慢慢点醒她：最好旁敲侧击而勿正面提出，还要使她感到那是为了维护她的人格独立，扩大她的世界观。倘若你已经想到奥里维的故事，不妨就把那部书叫她细读一二遍，特别要她注意那一段插曲。像雅葛丽纳那样只知道love," "love," love的人只是童话中任务，在现实世界非但得不到love，连日子都会过不下去，因为她除了love一无所知，一无所有，一无所爱。这样狭窄 的天地哪像一个天地！这样片面的人生观哪会得到幸福！无论男女，只有把兴趣集中在事业 上，学问上，艺术上，尽量抛开渺小的自我，才有快活的可能，才觉得活得有意义。未经世事的少女往往会存一个荒诞的梦想，以为恋爱时期的感情的高潮也能在婚后维持 下去。这是违反自然规律的妄想。古语说，“君子之交谈如水”；又有一句话说，“夫妇相 敬如宾”。可见只有平静、含蓄、温和的感情方能持久，另外一句的意义是说，夫妇到后来 完全是一种知己朋友的关系，也即是我们所谓的终身伴侣。未婚之前双方能深切领会到这一 点。就为将来打定了最可靠的基础，免除了多少不必要的误会和痛苦。'
    },
    {
      id: '3',
      title: '今岁应开墨色花.',
      time: '2019/8/22',
      category: '情感',
      content: '对方把你作为她整个的世界固然很危险，但也很宝贵！你既已发觉，一定会慢慢点醒她：最好旁敲侧击而勿正面提出，还要使她感到那是为了维护她的人格独立，扩大她的世界观。倘若你已经想到奥里维的故事，不妨就把那部书叫她细读一二遍，特别要她注意那一段插曲。像雅葛丽纳那样只知道love," "love," love的人只是童话中任务，在现实世界非但得不到love，连日子都会过不下去，因为她除了love一无所知，一无所有，一无所爱。这样狭窄 的天地哪像一个天地！这样片面的人生观哪会得到幸福！无论男女，只有把兴趣集中在事业 上，学问上，艺术上，尽量抛开渺小的自我，才有快活的可能，才觉得活得有意义。未经世事的少女往往会存一个荒诞的梦想，以为恋爱时期的感情的高潮也能在婚后维持 下去。这是违反自然规律的妄想。古语说，“君子之交谈如水”；又有一句话说，“夫妇相 敬如宾”。可见只有平静、含蓄、温和的感情方能持久，另外一句的意义是说，夫妇到后来 完全是一种知己朋友的关系，也即是我们所谓的终身伴侣。未婚之前双方能深切领会到这一 点。就为将来打定了最可靠的基础，免除了多少不必要的误会和痛苦。'
    },
    {
      id: '4',
      title: '今岁应开墨色花~',
      time: '2019/8/22',
      category: '情感',
      content: '对方把你作为她整个的世界固然很危险，但也很宝贵！你既已发觉，一定会慢慢点醒她：最好旁敲侧击而勿正面提出，还要使她感到那是为了维护她的人格独立，扩大她的世界观。倘若你已经想到奥里维的故事，不妨就把那部书叫她细读一二遍，特别要她注意那一段插曲。像雅葛丽纳那样只知道love," "love," love的人只是童话中任务，在现实世界非但得不到love，连日子都会过不下去，因为她除了love一无所知，一无所有，一无所爱。这样狭窄 的天地哪像一个天地！这样片面的人生观哪会得到幸福！无论男女，只有把兴趣集中在事业 上，学问上，艺术上，尽量抛开渺小的自我，才有快活的可能，才觉得活得有意义。未经世事的少女往往会存一个荒诞的梦想，以为恋爱时期的感情的高潮也能在婚后维持 下去。这是违反自然规律的妄想。古语说，“君子之交谈如水”；又有一句话说，“夫妇相 敬如宾”。可见只有平静、含蓄、温和的感情方能持久，另外一句的意义是说，夫妇到后来 完全是一种知己朋友的关系，也即是我们所谓的终身伴侣。未婚之前双方能深切领会到这一 点。就为将来打定了最可靠的基础，免除了多少不必要的误会和痛苦。'
    }
  ],
  categoryData: [
    {
      category: 'JS',
      count: '8'
    },
    {
      category: 'React',
      count: '5'
    },
    {
      category: '数据结构和算法',
      count: '3'
    },
    {
      category: '其他',
      count: '6'
    },
  ],
  tagData: [
    {
      tag: 'JS',
      count: '15'
    },
    {
      tag: 'React',
      count: '20'
    },
    {
      tag: '算法',
      count: '27'
    },
    {
      tag: 'ES6',
      count: '24'
    },
    {
      tag: 'TS',
      count: '16'
    },
    {
      tag: 'Vue',
      count: '26'
    },
    {
      tag: 'Flutter',
      count: '22'
    },
    {
      tag: '其他',
      count: '18'
    },
  ],
  detailData: {
    title: 'JS',
    count: '8',
    content: [
      {
        id: '1',
        article: '你不知道的JS',
        time: '8/16'
      },
      {
        id: '2',
        article: '前端代码规范 — JavaScript 风格指南',
        time: '8/18'
      },
      {
        id: '3',
        article: '深入 JavaScript 设计模式，从此有了优化代码的理论依据',
        time: '8/18'
      },
      {
        id: '4',  
        article: '写给前端工程师的Flutter教程',
        time: '8/16'
      },
      {
        id: '5',  
        article: '如何理解Virtual DOM？',
        time: '8/18'
      },
      {
        id: '6',
        article: 'JS基础-函数、对象和原型、原型链的关系',
        time: '8/18'
      },
      {
        id: '7',
        article: '基于 HTML5 Canvas 的拓扑组件开发',
        time: '8/18'
      },
      {
        id: '8',
        article: 'JavaScript中的位操作符',
        time: '8/18'
      },
    ]
  }
}

export default (state = defaultState, action) => {
  if(action.type === constants.INIT_HOME_DATA) {
    const newState = JSON.parse(JSON.stringify(state))
    newState.homeData = state.homeData
    return newState
  }

  if(action.type === constants.CATEGORY_DATA) {
    const newState = JSON.parse(JSON.stringify(state))
    newState.categoryData = state.categoryData
    return newState
  }

  if(action.type === constants.TAG_DATA) {
    const newState = JSON.parse(JSON.stringify(state))
    newState.tagData = state.tagData
    return newState
  }
  return state
}